version: '3.8'

services:
  rag-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-chatbot-backend
    ports:
      - "8000:8000"
    environment:
      # API Keys (set these in your .env file)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENV=${PINECONE_ENV:-us-west4-gcp-free}
      - PINECONE_INDEX=${PINECONE_INDEX:-rag-index}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE=${LOG_FILE:-logs/app.log}
      - ENABLE_CONSOLE_LOGGING=${ENABLE_CONSOLE_LOGGING:-true}
      - ENABLE_JSON_LOGGING=${ENABLE_JSON_LOGGING:-false}
      
      # RAG Configuration
      - RAG_CONFIDENCE_THRESHOLD=${RAG_CONFIDENCE_THRESHOLD:-0.7}
      - RAG_SIMILARITY_TOP_K=${RAG_SIMILARITY_TOP_K:-5}
    volumes:
      # Mount logs directory for persistence
      - ./logs:/app/logs
      # Mount documents directory for ingestion (optional)
      - ./documents:/app/documents:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rag-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: rag-chatbot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - rag-backend
    restart: unless-stopped
    networks:
      - rag-network
    profiles:
      - production

networks:
  rag-network:
    driver: bridge

volumes:
  logs:
    driver: local
